#!/bin/bash

# node_dns_changer.sh

#
# Copyright (C) 2018 - 2019 Caleb Woodbine <calebwoodbine.public@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

arg="$1"
resolvconf="/etc/resolv.conf"
primaryDNS="$2"
secondaryDNS="$3"
dnsBackupName="$4"

if [ -z "$dnsBackupName" ]
then
	dnsBackupName="before-dns-changer"
fi

function sudoUserCheck() {
# check if user is root
if [ ! "$(whoami)" = "root" ]
then
	echo "ERROR: You must be root to use some this program."
	exit 1
fi
return 0
}

function setDNSservers() {
# set DNS settings
if [ -z "$primaryDNS" ] || [ -z "$secondaryDNS" ]
then
	echo "[Error]: Primary or secondary DNS address has not been defined."
	return 1
fi

mv "$resolvconf" "$resolvconf.$dnsBackupName"
echo -e "#GENERATED BY node_dns_changer, backed up to '/etc/resolv.conf.$dnsBackupName'\\nnameserver $primaryDNS\\nnameserver $secondaryDNS" > "$resolvconf"

if grep -q "$primaryDNS" "$resolvconf" || grep -q "$secondaryDNS" "$resolvconf"
then
	echo "DNS settings installed successfully."
	chattr +i /etc/resolv.conf
	return 0
else
	echo "ERROR: DNS settings failed to install; Reverting changes."
	mv "$resolvconf.$dnsBackupName" "$resolvconf"
	return 1
fi
}

function restoreDNSservers() {
# restore DNS settings
chattr -i /etc/resolv.conf
if [ ! -e "$resolvconf.$dnsBackupName" ]
then
	echo "ERROR: Unable to find backup."
	exit 1
fi
mv "$resolvconf.$dnsBackupName" "$resolvconf"
if [ $? -eq 0 ]
then
	echo "DNS settings removed successfully."
	return 0
else
	echo "ERROR: DNS settings failed to remove."
	return 1
fi
}

sudoUserCheck
case "$arg" in
	set)
		shift
		setDNSservers
		;;

	restore)
		shift
		restoreDNSservers
		;;

	*)

		echo "[Error]: Please provide input {enable, disable}"
		;;
esac